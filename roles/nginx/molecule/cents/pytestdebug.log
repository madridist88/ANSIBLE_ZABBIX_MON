versions pytest-4.6.5, py-1.8.0, python-2.7.15.final.0
cwd=/home/dro/playbooks/roles/ansible-test-nginx/molecule/cents
args=['--debug', '-p', 'no:cacheprovider', '--connection=ansible', '--ansible-inventory=/home/dro/.cache/molecule/ansible-test-nginx/cents/inventory/ansible_inventory.yml', '/home/dro/playbooks/roles/ansible-test-nginx/molecule/cents/tests/test_default.py', '-vvv']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x7f8ddfa96a50>
    pytest_plugin_registered [hook]
        manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
        plugin: <Session cents exitstatus='<UNSET>' testsfailed=0 testscollected=0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x7f8ddfa96a50>
    early skip of rewriting module: py._io.terminalwriter [assertion]
    early skip of rewriting module: py._io.unicodedata [assertion]
    early skip of rewriting module: unicodedata [assertion]
    early skip of rewriting module: py._io.termios [assertion]
    early skip of rewriting module: termios [assertion]
    early skip of rewriting module: py._io.fcntl [assertion]
    early skip of rewriting module: py._io.struct [assertion]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <_pytest.config.Config object at 0x7f8ddfa96a50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.mark' from '/usr/local/lib/python2.7/dist-packages/_pytest/mark/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.main' from '/usr/local/lib/python2.7/dist-packages/_pytest/main.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.runner' from '/usr/local/lib/python2.7/dist-packages/_pytest/runner.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.fixtures' from '/usr/local/lib/python2.7/dist-packages/_pytest/fixtures.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.helpconfig' from '/usr/local/lib/python2.7/dist-packages/_pytest/helpconfig.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.python' from '/usr/local/lib/python2.7/dist-packages/_pytest/python.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.terminal' from '/usr/local/lib/python2.7/dist-packages/_pytest/terminal.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.debugging' from '/usr/local/lib/python2.7/dist-packages/_pytest/debugging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.unittest' from '/usr/local/lib/python2.7/dist-packages/_pytest/unittest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.capture' from '/usr/local/lib/python2.7/dist-packages/_pytest/capture.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.skipping' from '/usr/local/lib/python2.7/dist-packages/_pytest/skipping.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.tmpdir' from '/usr/local/lib/python2.7/dist-packages/_pytest/tmpdir.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.monkeypatch' from '/usr/local/lib/python2.7/dist-packages/_pytest/monkeypatch.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.recwarn' from '/usr/local/lib/python2.7/dist-packages/_pytest/recwarn.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.pastebin' from '/usr/local/lib/python2.7/dist-packages/_pytest/pastebin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.nose' from '/usr/local/lib/python2.7/dist-packages/_pytest/nose.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.assertion' from '/usr/local/lib/python2.7/dist-packages/_pytest/assertion/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.junitxml' from '/usr/local/lib/python2.7/dist-packages/_pytest/junitxml.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.resultlog' from '/usr/local/lib/python2.7/dist-packages/_pytest/resultlog.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.doctest' from '/usr/local/lib/python2.7/dist-packages/_pytest/doctest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.freeze_support' from '/usr/local/lib/python2.7/dist-packages/_pytest/freeze_support.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.setuponly' from '/usr/local/lib/python2.7/dist-packages/_pytest/setuponly.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.setupplan' from '/usr/local/lib/python2.7/dist-packages/_pytest/setupplan.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.warnings' from '/usr/local/lib/python2.7/dist-packages/_pytest/warnings.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.logging' from '/usr/local/lib/python2.7/dist-packages/_pytest/logging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.reports' from '/usr/local/lib/python2.7/dist-packages/_pytest/reports.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module 'testinfra.plugin' from '/usr/local/lib/python2.7/dist-packages/testinfra/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended'> err=<FDCapture 2 oldfd=6 _state='suspended'> in_=<FDCapture 0 oldfd=3 _state='started'> _state='suspended' _in_suspended='<UNSET>'> _current_item=None>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f8ddf935610>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f8ddf92ffd0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <_pytest.config.Config object at 0x7f8ddfa96a50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.mark' from '/usr/local/lib/python2.7/dist-packages/_pytest/mark/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.main' from '/usr/local/lib/python2.7/dist-packages/_pytest/main.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.runner' from '/usr/local/lib/python2.7/dist-packages/_pytest/runner.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.fixtures' from '/usr/local/lib/python2.7/dist-packages/_pytest/fixtures.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.helpconfig' from '/usr/local/lib/python2.7/dist-packages/_pytest/helpconfig.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.python' from '/usr/local/lib/python2.7/dist-packages/_pytest/python.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.terminal' from '/usr/local/lib/python2.7/dist-packages/_pytest/terminal.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.debugging' from '/usr/local/lib/python2.7/dist-packages/_pytest/debugging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.unittest' from '/usr/local/lib/python2.7/dist-packages/_pytest/unittest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.capture' from '/usr/local/lib/python2.7/dist-packages/_pytest/capture.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.skipping' from '/usr/local/lib/python2.7/dist-packages/_pytest/skipping.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.tmpdir' from '/usr/local/lib/python2.7/dist-packages/_pytest/tmpdir.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.monkeypatch' from '/usr/local/lib/python2.7/dist-packages/_pytest/monkeypatch.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.recwarn' from '/usr/local/lib/python2.7/dist-packages/_pytest/recwarn.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.pastebin' from '/usr/local/lib/python2.7/dist-packages/_pytest/pastebin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.nose' from '/usr/local/lib/python2.7/dist-packages/_pytest/nose.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.assertion' from '/usr/local/lib/python2.7/dist-packages/_pytest/assertion/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.junitxml' from '/usr/local/lib/python2.7/dist-packages/_pytest/junitxml.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.resultlog' from '/usr/local/lib/python2.7/dist-packages/_pytest/resultlog.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.doctest' from '/usr/local/lib/python2.7/dist-packages/_pytest/doctest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.freeze_support' from '/usr/local/lib/python2.7/dist-packages/_pytest/freeze_support.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.setuponly' from '/usr/local/lib/python2.7/dist-packages/_pytest/setuponly.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.setupplan' from '/usr/local/lib/python2.7/dist-packages/_pytest/setupplan.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.warnings' from '/usr/local/lib/python2.7/dist-packages/_pytest/warnings.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.logging' from '/usr/local/lib/python2.7/dist-packages/_pytest/logging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module '_pytest.reports' from '/usr/local/lib/python2.7/dist-packages/_pytest/reports.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <module 'testinfra.plugin' from '/usr/local/lib/python2.7/dist-packages/testinfra/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended'> err=<FDCapture 2 oldfd=6 _state='suspended'> in_=<FDCapture 0 oldfd=3 _state='started'> _state='suspended' _in_suspended='<UNSET>'> _current_item=None>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f8ddf935610>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <_pytest.logging.LoggingPlugin object at 0x7f8ddf92ffd0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x7f8de3078410>
          plugin: <_pytest.fixtures.FixtureManager object at 0x7f8ddf92fe90>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          startdir: /home/dro/playbooks/roles/ansible-test-nginx/molecule/cents
          config: <_pytest.config.Config object at 0x7f8ddfa96a50>
      finish pytest_report_header --> [['rootdir: /home/dro/playbooks/roles/ansible-test-nginx/molecule/cents', 'plugins: testinfra-3.2.0'], ['using: pytest-4.6.5 pylib-1.8.0', 'setuptools registered plugins:', u'  testinfra-3.2.0 at /usr/local/lib/python2.7/dist-packages/testinfra/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
    perform_collect <Session cents exitstatus=0 testsfailed=0 testscollected=0> ['/home/dro/playbooks/roles/ansible-test-nginx/molecule/cents/tests/test_default.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
        processing argument /home/dro/playbooks/roles/ansible-test-nginx/molecule/cents/tests/test_default.py [collection]
            pytest_collect_file [hook]
                path: /home/dro/playbooks/roles/ansible-test-nginx/molecule/cents/tests/test_default.py
                parent: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
              pytest_pycollect_makemodule [hook]
                  path: /home/dro/playbooks/roles/ansible-test-nginx/molecule/cents/tests/test_default.py
                  parent: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
              finish pytest_pycollect_makemodule --> <Module tests/test_default.py> [hook]
            finish pytest_collect_file --> [<Module tests/test_default.py>] [hook]
          matchnodes [<Module tests/test_default.py>] [] [collection]
            matchnodes finished ->  1 nodes [collection]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module tests/test_default.py> [collection]
      pytest_collectstart [hook]
          collector: <Module tests/test_default.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module tests/test_default.py>
      find_module called for: test_default [assertion]
      matched test file (was specified on cmdline): '/home/dro/playbooks/roles/ansible-test-nginx/molecule/cents/tests/test_default.py' [assertion]
      found cached rewritten pyc for '/home/dro/playbooks/roles/ansible-test-nginx/molecule/cents/tests/test_default.py' [assertion]
      matched marked file 'testinfra.utils' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils.py' [assertion]
      matched marked file 'testinfra.utils.__future__' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils.__future__ [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/utils' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils/__future__.py' [assertion]
      matched marked file 'testinfra.utils.contextlib' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils.contextlib [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/utils' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils/contextlib.py' [assertion]
      matched marked file 'testinfra.utils.locale' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils.locale [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/utils' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils/locale.py' [assertion]
      matched marked file 'testinfra.utils.re' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils.re [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/utils' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils/re.py' [assertion]
      matched marked file 'testinfra.utils.shutil' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils.shutil [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/utils' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils/shutil.py' [assertion]
      matched marked file 'testinfra.utils.tempfile' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils.tempfile [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/utils' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils/tempfile.py' [assertion]
      matched marked file 'testinfra.utils.six' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils.six [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/utils' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils/six.py' [assertion]
      matched marked file 'testinfra.utils.socket' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils.socket [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/utils' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils/socket.py' [assertion]
      matched marked file 'testinfra.utils.ansible_runner' (from 'testinfra') [assertion]
      find_module called for: testinfra.utils.ansible_runner [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/utils' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/utils/ansible_runner.py' [assertion]
      early skip of rewriting module: json [assertion]
      early skip of rewriting module: json.decoder [assertion]
      early skip of rewriting module: json.re [assertion]
      early skip of rewriting module: json.sys [assertion]
      early skip of rewriting module: json.struct [assertion]
      early skip of rewriting module: json.json [assertion]
      early skip of rewriting module: json.scanner [assertion]
      early skip of rewriting module: json._json [assertion]
      early skip of rewriting module: _json [assertion]
      early skip of rewriting module: json.encoder [assertion]
      early skip of rewriting module: ConfigParser [assertion]
      matched marked file 'testinfra.backend.local' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend.local [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/local.py' [assertion]
      matched marked file 'testinfra.backend.__builtin__' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend.__builtin__ [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/__builtin__.py' [assertion]
      matched marked file 'testinfra.backend._pytest' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend._pytest [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/_pytest.py' [assertion]
      matched marked file 'testinfra.backend.testinfra' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend.testinfra [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/testinfra.py' [assertion]
      matched marked file 'testinfra.backend.base' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend.base [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/base.py' [assertion]
      matched marked file 'testinfra.backend.collections' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend.collections [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/collections.py' [assertion]
      matched marked file 'testinfra.backend.locale' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend.locale [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/locale.py' [assertion]
      matched marked file 'testinfra.backend.logging' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend.logging [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/logging.py' [assertion]
      matched marked file 'testinfra.backend.pipes' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend.pipes [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/pipes.py' [assertion]
      early skip of rewriting module: pipes [assertion]
      matched marked file 'testinfra.backend.subprocess' (from 'testinfra') [assertion]
      find_module called for: testinfra.backend.subprocess [assertion]
      read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
      rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/subprocess.py' [assertion]
      early skip of rewriting module: encodings.ascii [assertion]
        pytest_pycollect_makeitem [hook]
            obj: <module '_pytest.assertion.rewrite' from '/usr/local/lib/python2.7/dist-packages/_pytest/assertion/rewrite.pyc'>
            collector: <Module tests/test_default.py>
            name: @pytest_ar
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Module tests/test_default.py>
            name: __spec__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: {'bytearray': <type 'bytearray'>, 'IndexError': <type 'exceptions.IndexError'>, 'all': <built-in function all>, 'help': Type help() for interactive help, or help(object) for help about object., 'vars': <built-in function vars>, 'SyntaxError': <type 'exceptions.SyntaxError'>, 'unicode': <type 'unicode'>, 'UnicodeDecodeError': <type 'exceptions.UnicodeDecodeError'>, 'memoryview': <type 'memoryview'>, 'isinstance': <built-in function isinstance>, 'copyright': Copyright (c) 2001-2018 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'NameError': <type 'exceptions.NameError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'dict': <type 'dict'>, 'input': <built-in function input>, 'oct': <built-in function oct>, 'bin': <built-in function bin>, 'SystemExit': <type 'exceptions.SystemExit'>, 'StandardError': <type 'exceptions.StandardError'>, 'format': <built-in function format>, 'repr': <built-in function repr>, 'sorted': <built-in function sorted>, 'False': False, 'RuntimeWarning': <type 'exceptions.RuntimeWarning'>, 'list': <type 'list'>, 'iter': <built-in function iter>, 'reload': <built-in function reload>, 'Warning': <type 'exceptions.Warning'>, '__package__': None, 'round': <built-in function round>, 'dir': <built-in function dir>, 'cmp': <built-in function cmp>, 'set': <type 'set'>, 'bytes': <type 'str'>, 'reduce': <built-in function reduce>, 'intern': <built-in function intern>, 'issubclass': <built-in function issubclass>, 'Ellipsis': Ellipsis, 'EOFError': <type 'exceptions.EOFError'>, 'locals': <built-in function locals>, 'BufferError': <type 'exceptions.BufferError'>, 'slice': <type 'slice'>, 'FloatingPointError': <type 'exceptions.FloatingPointError'>, 'sum': <built-in function sum>, 'getattr': <built-in function getattr>, 'abs': <built-in function abs>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'print': <built-in function print>, 'True': True, 'FutureWarning': <type 'exceptions.FutureWarning'>, 'ImportWarning': <type 'exceptions.ImportWarning'>, 'None': None, 'hash': <built-in function hash>, 'ReferenceError': <type 'exceptions.ReferenceError'>, 'len': <built-in function len>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'frozenset': <type 'frozenset'>, '__name__': '__builtin__', 'ord': <built-in function ord>, 'super': <type 'super'>, 'TypeError': <type 'exceptions.TypeError'>, 'license': Type license() to see the full license text, 'KeyboardInterrupt': <type 'exceptions.KeyboardInterrupt'>, 'UserWarning': <type 'exceptions.UserWarning'>, 'filter': <built-in function filter>, 'range': <built-in function range>, 'staticmethod': <type 'staticmethod'>, 'SystemError': <type 'exceptions.SystemError'>, 'BaseException': <type 'exceptions.BaseException'>, 'pow': <built-in function pow>, 'RuntimeError': <type 'exceptions.RuntimeError'>, 'float': <type 'float'>, 'MemoryError': <type 'exceptions.MemoryError'>, 'StopIteration': <type 'exceptions.StopIteration'>, 'globals': <built-in function globals>, 'divmod': <built-in function divmod>, 'enumerate': <type 'enumerate'>, 'apply': <built-in function apply>, 'LookupError': <type 'exceptions.LookupError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'basestring': <type 'basestring'>, 'UnicodeError': <type 'exceptions.UnicodeError'>, 'zip': <built-in function zip>, 'hex': <built-in function hex>, 'long': <type 'long'>, 'next': <built-in function next>, 'ImportError': <type 'exceptions.ImportError'>, 'chr': <built-in function chr>, 'xrange': <type 'xrange'>, 'type': <type 'type'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'Exception': <type 'exceptions.Exception'>, 'tuple': <type 'tuple'>, 'UnicodeTranslateError': <type 'exceptions.UnicodeTranslateError'>, 'reversed': <type 'reversed'>, 'UnicodeEncodeError': <type 'exceptions.UnicodeEncodeError'>, 'IOError': <type 'exceptions.IOError'>, 'hasattr': <built-in function hasattr>, 'delattr': <built-in function delattr>, 'setattr': <built-in function setattr>, 'raw_input': <built-in function raw_input>, 'SyntaxWarning': <type 'exceptions.SyntaxWarning'>, 'compile': <built-in function compile>, 'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'str': <type 'str'>, 'property': <type 'property'>, 'GeneratorExit': <type 'exceptions.GeneratorExit'>, 'int': <type 'int'>, '__import__': <built-in function __import__>, 'KeyError': <type 'exceptions.KeyError'>, 'coerce': <built-in function coerce>, 'PendingDeprecationWarning': <type 'exceptions.PendingDeprecationWarning'>, 'file': <type 'file'>, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, 'unichr': <built-in function unichr>, 'id': <built-in function id>, 'OSError': <type 'exceptions.OSError'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'min': <built-in function min>, 'UnicodeWarning': <type 'exceptions.UnicodeWarning'>, 'execfile': <built-in function execfile>, 'any': <built-in function any>, 'complex': <type 'complex'>, 'bool': <type 'bool'>, 'ValueError': <type 'exceptions.ValueError'>, 'NotImplemented': NotImplemented, 'map': <built-in function map>, 'buffer': <type 'buffer'>, 'max': <built-in function max>, 'object': <type 'object'>, 'TabError': <type 'exceptions.TabError'>, 'callable': <built-in function callable>, 'ZeroDivisionError': <type 'exceptions.ZeroDivisionError'>, 'eval': <built-in function eval>, '__debug__': True, 'IndentationError': <type 'exceptions.IndentationError'>, 'AssertionError': <type 'exceptions.AssertionError'>, 'classmethod': <type 'classmethod'>, 'UnboundLocalError': <type 'exceptions.UnboundLocalError'>, 'NotImplementedError': <type 'exceptions.NotImplementedError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'OverflowError': <type 'exceptions.OverflowError'>}
            collector: <Module tests/test_default.py>
            name: __builtins__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'os' from '/usr/lib/python2.7/os.pyc'>
            collector: <Module tests/test_default.py>
            name: os
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /home/dro/playbooks/roles/ansible-test-nginx/molecule/cents/tests/test_default.py
            collector: <Module tests/test_default.py>
            name: __file__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function test_hosts_file at 0x7f8ddf8b4b18>
            collector: <Module tests/test_default.py>
            name: test_hosts_file
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f8ddf685190>
          matched marked file 'testinfra.backend.ansible' (from 'testinfra') [assertion]
          find_module called for: testinfra.backend.ansible [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/ansible.py' [assertion]
          early skip of rewriting module: encodings.unicode_escape [assertion]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_hosts_file[ansible://centos01]>, <Function test_hosts_file[ansible://centos02]>, <Function test_hosts_file[ansible://centos03]>] [hook]
        pytest_pycollect_makeitem [hook]
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f8ddf9816d0>
            collector: <Module tests/test_default.py>
            name: __loader__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: [u'centos01', u'centos02', u'centos03']
            collector: <Module tests/test_default.py>
            name: testinfra_hosts
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'testinfra' from '/usr/local/lib/python2.7/dist-packages/testinfra/__init__.pyc'>
            collector: <Module tests/test_default.py>
            name: testinfra
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /home/dro/playbooks/roles/ansible-test-nginx/molecule/cents/tests/__pycache__/test_default.cpython-27-PYTEST.pyc
            collector: <Module tests/test_default.py>
            name: __cached__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: test_default
            collector: <Module tests/test_default.py>
            name: __name__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Module tests/test_default.py>
            name: __package__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module '__builtin__' (built-in)>
            collector: <Module tests/test_default.py>
            name: @py_builtins
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Module tests/test_default.py>
            name: __doc__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module tests/test_default.py>
            name: __setattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <built-in method __new__ of type object at 0x55fa842272a0>
            collector: <Module tests/test_default.py>
            name: __new__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module tests/test_default.py>
            name: __getattribute__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module tests/test_default.py>
            name: __delattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module tests/test_default.py>
            name: __repr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <member '__dict__' of 'module' objects>
            collector: <Module tests/test_default.py>
            name: __dict__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module tests/test_default.py>
            name: __init__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module tests/test_default.py>
            name: __reduce_ex__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module tests/test_default.py>
            name: __reduce__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module tests/test_default.py>
            name: __str__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__format__' of 'object' objects>
            collector: <Module tests/test_default.py>
            name: __format__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module tests/test_default.py>
            name: __class__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module tests/test_default.py>
            name: __subclasshook__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module tests/test_default.py>
            name: __hash__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module tests/test_default.py>
            name: __sizeof__
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_default.py' lenresult=3 outcome='passed'> [hook]
    genitems <Function test_hosts_file[ansible://centos01]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_hosts_file[ansible://centos01]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_hosts_file[ansible://centos02]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_hosts_file[ansible://centos02]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_hosts_file[ansible://centos03]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_hosts_file[ansible://centos03]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_default.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          items: [<Function test_hosts_file[ansible://centos01]>, <Function test_hosts_file[ansible://centos02]>, <Function test_hosts_file[ansible://centos03]>]
          session: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x7f8ddfa96a50>
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session cents exitstatus=0 testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            items: [<Function test_hosts_file[ansible://centos01]>, <Function test_hosts_file[ansible://centos02]>, <Function test_hosts_file[ansible://centos03]>]
            config: <_pytest.config.Config object at 0x7f8ddfa96a50>
            startdir: /home/dro/playbooks/roles/ansible-test-nginx/molecule/cents
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<Function test_hosts_file[ansible://centos01]>, <Function test_hosts_file[ansible://centos02]>, <Function test_hosts_file[ansible://centos03]>] [hook]
    pytest_runtestloop [hook]
        session: <Session cents exitstatus=0 testsfailed=0 testscollected=3>
      pytest_runtest_protocol [hook]
          item: <Function test_hosts_file[ansible://centos01]>
          nextitem: <Function test_hosts_file[ansible://centos02]>
        pytest_runtest_logstart [hook]
            location: ('tests/test_default.py', 9, 'test_hosts_file[ansible://centos01]')
            nodeid: tests/test_default.py::test_hosts_file[ansible://centos01]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_hosts_file[ansible://centos01]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope=u'module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_hosts_file[ansible://centos01]>>
          finish pytest_fixture_setup --> <testinfra.host.Host object at 0x7f8ddf685810> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='host' scope=u'module' baseid=''>
              request: <SubRequest 'host' for <Function test_hosts_file[ansible://centos01]>>
          finish pytest_fixture_setup --> <testinfra.host.Host object at 0x7f8ddf685810> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_hosts_file[ansible://centos01]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos01]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos01]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos01]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_hosts_file[ansible://centos01]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_hosts_file[ansible://centos01]>
          matched marked file 'testinfra.modules.file' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.file [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/modules' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/modules/file.py' [assertion]
          early skip of rewriting module: encodings.utf_32_be [assertion]
          matched marked file 'testinfra.modules.__builtin__' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.__builtin__ [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/modules' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/modules/__builtin__.py' [assertion]
          matched marked file 'testinfra.modules._pytest' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules._pytest [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/modules' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/modules/_pytest.py' [assertion]
          matched marked file 'testinfra.modules.datetime' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.datetime [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/modules' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/modules/datetime.py' [assertion]
          matched marked file 'testinfra.modules.six' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.six [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/modules' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/modules/six.py' [assertion]
          matched marked file 'testinfra.modules.testinfra' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.testinfra [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/modules' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/modules/testinfra.py' [assertion]
          matched marked file 'testinfra.modules.base' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.base [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/modules' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/modules/base.py' [assertion]
          matched marked file 'testinfra.modules.systeminfo' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.systeminfo [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/modules' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/modules/systeminfo.py' [assertion]
          matched marked file 'testinfra.modules.re' (from 'testinfra') [assertion]
          find_module called for: testinfra.modules.re [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/modules' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/modules/re.py' [assertion]
          matched marked file 'testinfra.backend.ssh' (from 'testinfra') [assertion]
          find_module called for: testinfra.backend.ssh [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/ssh.py' [assertion]
          matched marked file 'testinfra.backend.base64' (from 'testinfra') [assertion]
          find_module called for: testinfra.backend.base64 [assertion]
          read only directory: '/usr/local/lib/python2.7/dist-packages/testinfra/backend' [assertion]
          rewriting '/usr/local/lib/python2.7/dist-packages/testinfra/backend/base64.py' [assertion]
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_hosts_file[ansible://centos01]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos01]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos01]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos01]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_hosts_file[ansible://centos01]>
            nextitem: <Function test_hosts_file[ansible://centos02]>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_hosts_file[ansible://centos01]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos01]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos01]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos01]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            location: ('tests/test_default.py', 9, 'test_hosts_file[ansible://centos01]')
            nodeid: tests/test_default.py::test_hosts_file[ansible://centos01]
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_hosts_file[ansible://centos02]>
          nextitem: <Function test_hosts_file[ansible://centos03]>
        pytest_runtest_logstart [hook]
            location: ('tests/test_default.py', 9, 'test_hosts_file[ansible://centos02]')
            nodeid: tests/test_default.py::test_hosts_file[ansible://centos02]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_hosts_file[ansible://centos02]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='host' scope=u'module' baseid=''>
              request: <SubRequest 'host' for <Function test_hosts_file[ansible://centos01]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope=u'module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_hosts_file[ansible://centos02]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope=u'module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_hosts_file[ansible://centos02]>>
          finish pytest_fixture_setup --> <testinfra.host.Host object at 0x7f8ddf685890> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='host' scope=u'module' baseid=''>
              request: <SubRequest 'host' for <Function test_hosts_file[ansible://centos02]>>
          finish pytest_fixture_setup --> <testinfra.host.Host object at 0x7f8ddf685890> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_hosts_file[ansible://centos02]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos02]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos02]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos02]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_hosts_file[ansible://centos02]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_hosts_file[ansible://centos02]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_hosts_file[ansible://centos02]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos02]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos02]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos02]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_hosts_file[ansible://centos02]>
            nextitem: <Function test_hosts_file[ansible://centos03]>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_hosts_file[ansible://centos02]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos02]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos02]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos02]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            location: ('tests/test_default.py', 9, 'test_hosts_file[ansible://centos02]')
            nodeid: tests/test_default.py::test_hosts_file[ansible://centos02]
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_hosts_file[ansible://centos03]>
          nextitem: None
        pytest_runtest_logstart [hook]
            location: ('tests/test_default.py', 9, 'test_hosts_file[ansible://centos03]')
            nodeid: tests/test_default.py::test_hosts_file[ansible://centos03]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_hosts_file[ansible://centos03]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='host' scope=u'module' baseid=''>
              request: <SubRequest 'host' for <Function test_hosts_file[ansible://centos02]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope=u'module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_hosts_file[ansible://centos03]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope=u'module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_hosts_file[ansible://centos03]>>
          finish pytest_fixture_setup --> <testinfra.host.Host object at 0x7f8ddf6858d0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='host' scope=u'module' baseid=''>
              request: <SubRequest 'host' for <Function test_hosts_file[ansible://centos03]>>
          finish pytest_fixture_setup --> <testinfra.host.Host object at 0x7f8ddf6858d0> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_hosts_file[ansible://centos03]>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos03]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos03]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos03]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_hosts_file[ansible://centos03]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_hosts_file[ansible://centos03]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_hosts_file[ansible://centos03]>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos03]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos03]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos03]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_hosts_file[ansible://centos03]>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='host' scope=u'module' baseid=''>
              request: <SubRequest 'host' for <Function test_hosts_file[ansible://centos03]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='host' scope=u'module' baseid=''>
              request: <SubRequest 'host' for <Function test_hosts_file[ansible://centos03]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope=u'module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_hosts_file[ansible://centos03]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='host' scope=u'module' baseid=''>
              request: <SubRequest 'host' for <Function test_hosts_file[ansible://centos02]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope=u'module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_hosts_file[ansible://centos02]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='host' scope=u'module' baseid=''>
              request: <SubRequest 'host' for <Function test_hosts_file[ansible://centos01]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_testinfra_host' scope=u'module' baseid=''>
              request: <SubRequest '_testinfra_host' for <Function test_hosts_file[ansible://centos01]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_hosts_file[ansible://centos03]>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos03]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos03]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_default.py::test_hosts_file[ansible://centos03]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            location: ('tests/test_default.py', 9, 'test_hosts_file[ansible://centos03]')
            nodeid: tests/test_default.py::test_hosts_file[ansible://centos03]
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session cents exitstatus=0 testsfailed=0 testscollected=3>
        exitstatus: 0
      pytest_terminal_summary [hook]
          config: <_pytest.config.Config object at 0x7f8ddfa96a50>
          exitstatus: 0
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x7f8ddf935610>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x7f8ddfa96a50>
    finish pytest_unconfigure --> [] [hook]
